services:
  mongo:
    image: mongo
    container_name: mongo
    ports:
      - '27017:27017'
    volumes:
      - mongodata:/data/db
    networks:
      - backend

  redis:
    image: redis
    container_name: redis
    ports:
      - '6379:6379'
    volumes:
      - redisdata:/data
    networks:
      - backend

  rabbit:
    image: rabbitmq
    container_name: rabbit
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq-lib:/var/lib/rabbitmq
      - rabbitmq-log:/var/log/rabbitmq
    networks:
      - backend
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 10s
      timeout: 30s
      retries: 3

  consumer:
    build: ./consumer
    container_name: consumer
    environment:
      - RABBIT_URL=amqp://rabbit
    depends_on:
      rabbit:
        condition: service_healthy
    networks:
      - backend

  server:
    build: ./backend
    container_name: server
    env_file:
      - .env
    environment:
      - MONGO_URI=mongodb://mongo:27017/logistica
      - REDIS_HOST=redis://redis:6379
      - RABBIT_URL=amqp://rabbit
      - PORT=4000
    ports:
      - '4000:4000'
    depends_on:
      mongo:
        condition: service_started
      redis:
        condition: service_started
      rabbit:
        condition: service_healthy
    networks:
      - backend

  react:
    build:
      context: ./frontend
      args:
        - VITE_API_URL=http://localhost:4000/api
    container_name: react
    ports:
      - 4173:4173

networks:
  backend:
    name: backend_network
    driver: bridge

volumes:
  mongodata:
  redisdata:
  rabbitmq-lib:
  rabbitmq-log:
